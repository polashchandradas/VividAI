name: Generate IPA File (Fixed)

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ main ]

jobs:
  generate-ipa:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Xcode
      run: sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer
      
    - name: Install dependencies
      run: |
        # Install CocoaPods if needed
        if [ -f "Podfile" ]; then
          gem install cocoapods
          pod install
        fi
        
        # Resolve Swift Package Manager dependencies
        xcodebuild -resolvePackageDependencies -project VividAI.xcodeproj
        
    - name: Create custom ExportOptions.plist for ad-hoc distribution
      run: |
        cat > ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>ad-hoc</string>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <true/>
            <key>compileBitcode</key>
            <false/>
            <key>signingStyle</key>
            <string>automatic</string>
            <key>signingCertificate</key>
            <string>iOS Distribution</string>
            <key>provisioningProfiles</key>
            <dict>
                <key>com.vividai.app</key>
                <string>match AdHoc com.vividai.app</string>
            </dict>
        </dict>
        </plist>
        EOF
        
    - name: Build for iOS Simulator (for testing)
      run: |
        xcodebuild clean build \
          -project VividAI.xcodeproj \
          -scheme VividAI \
          -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4' \
          -configuration Release \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          -resolvePackageDependencies
          
    - name: Create unsigned IPA for testing
      run: |
        echo "Creating unsigned IPA for testing purposes..."
        mkdir -p ./build
        
        # Find the app bundle in DerivedData
        APP_PATH=$(find ~/Library/Developer/Xcode/DerivedData -name "VividAI.app" -type d | head -1)
        if [ -z "$APP_PATH" ]; then
          echo "‚ùå App bundle not found in DerivedData"
          echo "Available files:"
          find ~/Library/Developer/Xcode/DerivedData -name "*.app" -type d || echo "No .app files found"
          exit 1
        fi
        
        echo "üì± Found app bundle at: $APP_PATH"
        
        # Copy the app bundle
        cp -r "$APP_PATH" ./build/
        
        # Create a simple IPA structure
        mkdir -p ./build/Payload
        cp -r ./build/VividAI.app ./build/Payload/
        
        # Create the IPA file
        cd ./build
        zip -r VividAI-unsigned.ipa Payload/
        cd ..
        
        echo "üì± Unsigned IPA created for testing!"
        
    - name: List generated files
      run: |
        echo "üì± Generated files:"
        ls -la ./build/
        if [ -f "./build/VividAI.ipa" ]; then
          echo "‚úÖ Signed IPA file created!"
        elif [ -f "./build/VividAI-unsigned.ipa" ]; then
          echo "‚úÖ Unsigned IPA file created!"
        else
          echo "‚ùå No IPA file found"
        fi
        
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: VividAI-ipa
        path: ./build/*.ipa
        retention-days: 30
        
    - name: Success message
      run: |
        echo "üéâ VividAI IPA file generated successfully!"
        echo "üì± You can download it from the Actions artifacts"
        echo "üîó Go to Actions tab ‚Üí Select workflow run ‚Üí Download artifact"
        echo "üí° Upload this IPA to TestFlight, Appetize.io, or BrowserStack for testing"
