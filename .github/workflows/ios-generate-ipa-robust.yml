name: Generate IPA File (Robust Method)

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ main ]

jobs:
  generate-ipa:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Xcode
      run: sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer
      
    - name: Install dependencies
      run: |
        # Install CocoaPods if needed
        if [ -f "Podfile" ]; then
          gem install cocoapods
          pod install
        fi
        
        # Resolve Swift Package Manager dependencies
        echo "📦 Resolving dependencies..."
        xcodebuild -resolvePackageDependencies -project VividAI.xcodeproj
        
    - name: Clean environment
      run: |
        echo "🧹 Cleaning build environment..."
        # Clean DerivedData
        rm -rf ~/Library/Developer/Xcode/DerivedData/*
        rm -rf ./DerivedData
        
        # Clean build folder
        rm -rf ./build
        
        # Reset Xcode caches
        rm -rf ~/Library/Caches/com.apple.dt.Xcode
        
    - name: Verify project structure
      run: |
        echo "🔍 Verifying project structure..."
        echo "📁 Project files:"
        ls -la VividAI.xcodeproj/
        
        echo "📁 Source files:"
        find VividAI -name "*.swift" | head -10
        
        echo "📁 Dependencies:"
        xcodebuild -list -project VividAI.xcodeproj
        
    - name: Build for iOS Simulator
      run: |
        echo "🔨 Building for iOS Simulator..."
        echo "📱 Target: iPhone 16, iOS 18.4"
        echo "⚙️ Configuration: Release"
        
        # Build with comprehensive logging
        set -e  # Exit on any error
        
        xcodebuild clean build \
          -project VividAI.xcodeproj \
          -scheme VividAI \
          -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4' \
          -configuration Release \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          -derivedDataPath ./DerivedData \
          -resolvePackageDependencies \
          -verbose \
          -showBuildTimingSummary \
          -showBuildSettings \
          | tee build.log
        
        echo "✅ Build completed successfully!"
        
    - name: Verify build artifacts
      run: |
        echo "🔍 Verifying build artifacts..."
        
        # Check DerivedData structure
        echo "📁 DerivedData structure:"
        find ./DerivedData -type d -name "*VividAI*" || echo "No VividAI directories found"
        
        # Look for app bundle
        echo "📱 Looking for app bundle..."
        APP_PATH=$(find ./DerivedData -name "VividAI.app" -type d | head -1)
        
        if [ -z "$APP_PATH" ]; then
          echo "❌ App bundle not found!"
          echo "📁 Available files in DerivedData:"
          find ./DerivedData -name "*.app" -type d || echo "No .app files found"
          
          echo "📁 Build products directory:"
          find ./DerivedData -path "*/Build/Products/*" -type d || echo "No Build/Products found"
          
          echo "📋 Build log (last 100 lines):"
          tail -100 build.log || echo "No build log found"
          
          exit 1
        fi
        
        echo "✅ App bundle found at: $APP_PATH"
        echo "📱 App bundle size: $(du -sh "$APP_PATH")"
        
        # Verify app bundle contents
        echo "📱 App bundle contents:"
        ls -la "$APP_PATH"
        
    - name: Create IPA file
      run: |
        echo "📦 Creating IPA file..."
        mkdir -p ./build/Payload
        
        # Find the app bundle
        APP_PATH=$(find ./DerivedData -name "VividAI.app" -type d | head -1)
        
        if [ -z "$APP_PATH" ]; then
          echo "❌ App bundle not found for IPA creation"
          exit 1
        fi
        
        echo "📱 Copying app bundle from: $APP_PATH"
        cp -r "$APP_PATH" ./build/Payload/
        
        # Create IPA file
        cd ./build
        echo "📦 Creating ZIP archive..."
        zip -r VividAI-simulator.ipa Payload/
        cd ..
        
        echo "✅ IPA file created successfully!"
        
    - name: Verify IPA file
      run: |
        echo "🔍 Verifying IPA file..."
        
        if [ ! -f "./build/VividAI-simulator.ipa" ]; then
          echo "❌ IPA file not found!"
          exit 1
        fi
        
        echo "✅ IPA file found:"
        ls -la ./build/VividAI-simulator.ipa
        
        echo "📦 IPA file size: $(du -sh ./build/VividAI-simulator.ipa)"
        
        # Verify IPA contents
        echo "📦 IPA contents:"
        unzip -l ./build/VividAI-simulator.ipa | head -20
        
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: VividAI-ipa-robust
        path: ./build/VividAI-simulator.ipa
        retention-days: 30
        
    - name: Success message
      run: |
        echo "🎉 VividAI IPA file generated successfully!"
        echo "📱 File: VividAI-simulator.ipa"
        echo "📦 Size: $(du -sh ./build/VividAI-simulator.ipa)"
        echo "🔗 Download from Actions artifacts"
        echo "💡 Upload to TestFlight, Appetize.io, or BrowserStack for testing"
