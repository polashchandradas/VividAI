name: Generate Simulator Build

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ main ]

jobs:
  generate-simulator-build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Xcode
      run: sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer
      
    - name: Install dependencies
      run: |
        # Install CocoaPods if needed
        if [ -f "Podfile" ]; then
          gem install cocoapods
          pod install
        fi
        
        # Resolve Swift Package Manager dependencies
        xcodebuild -resolvePackageDependencies -project VividAI.xcodeproj
        
    - name: Build for iOS Simulator
      run: |
        xcodebuild clean build \
          -project VividAI.xcodeproj \
          -scheme VividAI \
          -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4' \
          -configuration Release \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          -derivedDataPath ./DerivedData
          
    - name: Create app bundle
      run: |
        mkdir -p ./build
        cp -r ./DerivedData/Build/Products/Release-iphonesimulator/VividAI.app ./build/
        echo "ðŸ“± VividAI.app created successfully!"
        
    - name: List generated files
      run: |
        echo "ðŸ“± Generated files:"
        ls -la ./build/
        echo "ðŸ“¦ App bundle ready for simulator testing!"
        
    - name: Upload app bundle artifact
      uses: actions/upload-artifact@v4
      with:
        name: VividAI-simulator-app
        path: ./build/VividAI.app
        retention-days: 30
        
    - name: Success message
      run: |
        echo "ðŸŽ‰ VividAI simulator build generated successfully!"
        echo "ðŸ“± You can download the .app bundle from the Actions artifacts"
        echo "ðŸ”— Go to Actions tab â†’ Select workflow run â†’ Download artifact"
        echo "ðŸ’¡ Use this .app file with iOS Simulator or Xcode"
