name: iOS Build (Optimized)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: macos-latest
    timeout-minutes: 15  # Reduced from 30-45 minutes
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
        
      # CRITICAL OPTIMIZATION: Cache CocoaPods
      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: |
            Pods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      
      # CRITICAL OPTIMIZATION: Cache DerivedData
      - name: Cache DerivedData
        uses: actions/cache@v4
        with:
          path: DerivedData
          key: ${{ runner.os }}-derived-${{ hashFiles('**/*.swift', '**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-derived-
      
      - name: Install CocoaPods dependencies
        run: |
          echo "📦 Installing CocoaPods dependencies..."
          if ! command -v pod &> /dev/null; then
            sudo gem install cocoapods --no-document
          fi
          pod install --repo-update || pod install
          echo "✅ CocoaPods dependencies installed"
          
      - name: Build for iOS Device
        run: |
          echo "🔨 Building VividAI app for iOS Device..."
          
          set -e
          
          # OPTIMIZATION: Use -quiet instead of -verbose for faster builds
          xcodebuild build-for-testing \
            -workspace VividAI.xcworkspace \
            -scheme VividAI \
            -destination 'generic/platform=iOS' \
            -configuration Release \
            -derivedDataPath ./DerivedData \
            DEVELOPMENT_TEAM="" \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            PROVISIONING_PROFILE="" \
            SUPPORTED_PLATFORMS="iphoneos" \
            VALID_ARCHS="arm64" \
            ARCHS="arm64" \
            EXCLUDED_ARCHS[sdk=iphonesimulator*]="arm64" \
            -allowProvisioningUpdates \
            -quiet \
            -jobs 4 \
            2>&1 | tee build_output.log || true
          
          echo "✅ Build completed!"
          
          # Check for errors
          if grep -i "error:" build_output.log | grep -v "warnings"; then
            echo "❌ Build errors found"
            grep -i "error:" build_output.log | head -20
            exit 1
          fi
          
      - name: Find and Verify App Bundle
        run: |
          echo "🔍 Looking for app bundle..."
          
          APP_PATH=$(find ./DerivedData -name "VividAI.app" -type d | head -1)
          
          if [ -z "$APP_PATH" ]; then
            echo "❌ App bundle not found!"
            exit 1
          fi
          
          echo "✅ App bundle found at: $APP_PATH"
          
          # Quick verification
          if [ ! -f "$APP_PATH/VividAI" ] && [ ! -f "$APP_PATH/Info.plist" ]; then
            echo "❌ Invalid app bundle!"
            exit 1
          fi
          
          echo "✅ App bundle verified"
          echo "APP_PATH=$APP_PATH" >> $GITHUB_ENV
        
      - name: Create IPA file
        run: |
          echo "📦 Creating IPA file..."
          
          mkdir -p ./Payload
          cp -R "$APP_PATH" ./Payload/
          zip -q -r VividAI-Device.ipa ./Payload
          
          echo "✅ IPA file created"
          echo "📱 IPA size: $(du -sh VividAI-Device.ipa | cut -f1)"
        
      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: VividAI-Device-IPA
          path: VividAI-Device.ipa
          retention-days: 7
          compression-level: 6
        
      - name: Cleanup
        if: always()
        run: |
          echo "🧹 Cleaning up..."
          rm -rf ./Payload

