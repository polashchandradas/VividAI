name: VividAI iOS CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Xcode
      run: sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer
      
    - name: Cache Swift Package Manager
      uses: actions/cache@v4
      with:
        path: |
          .build
          ~/Library/Caches/org.swift.swiftpm
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Cache CocoaPods
      uses: actions/cache@v4
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-
          
    - name: Install dependencies
      run: |
        # Install CocoaPods if needed
        if [ -f "Podfile" ]; then
          gem install cocoapods
          pod install
        fi
        
        # Resolve Swift Package Manager dependencies
        xcodebuild -resolvePackageDependencies -project VividAI.xcodeproj
        
        # Clean derived data to ensure fresh build
        rm -rf ~/Library/Developer/Xcode/DerivedData/*
        
    - name: Build VividAI app
      run: |
        xcodebuild clean build \
          -project VividAI.xcodeproj \
          -scheme VividAI \
          -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4' \
          -configuration Debug \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          -resolvePackageDependencies
          
    # Test step removed - project doesn't have test target configured
          
    - name: Build for release (optional)
      if: github.ref == 'refs/heads/main'
      run: |
        xcodebuild clean build \
          -project VividAI.xcodeproj \
          -scheme VividAI \
          -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4' \
          -configuration Release \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          -resolvePackageDependencies
          
    - name: Find and verify app bundle
      if: github.ref == 'refs/heads/main'
      run: |
        echo "üîç Looking for app bundle..."
        
        # Check default DerivedData location
        APP_PATH=$(find ~/Library/Developer/Xcode/DerivedData -name "VividAI.app" -type d | head -1)
        
        if [ -z "$APP_PATH" ]; then
          echo "‚ùå App bundle not found in default DerivedData"
          echo "üìÅ Available files in DerivedData:"
          find ~/Library/Developer/Xcode/DerivedData -name "*.app" -type d || echo "No .app files found"
          exit 1
        fi
        
        echo "‚úÖ App bundle found at: $APP_PATH"
        echo "üì± App bundle size: $(du -sh "$APP_PATH")"
        
        # Verify app bundle contents
        echo "üì± App bundle contents:"
        ls -la "$APP_PATH"
        
        # Verify it's a valid app bundle
        if [ ! -f "$APP_PATH/Info.plist" ]; then
          echo "‚ùå Invalid app bundle - missing Info.plist"
          exit 1
        fi
        
        echo "‚úÖ App bundle is valid"
        
    - name: Create IPA file
      if: github.ref == 'refs/heads/main'
      run: |
        echo "üì¶ Creating IPA file..."
        mkdir -p ./build/Payload
        
        # Find the app bundle
        APP_PATH=$(find ~/Library/Developer/Xcode/DerivedData -name "VividAI.app" -type d | head -1)
        
        if [ -z "$APP_PATH" ]; then
          echo "‚ùå App bundle not found for IPA creation"
          exit 1
        fi
        
        echo "üì± Copying app bundle from: $APP_PATH"
        cp -r "$APP_PATH" ./build/Payload/
        
        # Create IPA file
        cd ./build
        echo "üì¶ Creating ZIP archive..."
        zip -r VividAI-ipa.ipa Payload/
        cd ..
        
        echo "‚úÖ IPA file created successfully!"
        
    - name: Verify IPA file
      if: github.ref == 'refs/heads/main'
      run: |
        echo "üîç Verifying IPA file..."
        
        if [ ! -f "./build/VividAI-ipa.ipa" ]; then
          echo "‚ùå IPA file not found!"
          exit 1
        fi
        
        echo "‚úÖ IPA file found:"
        ls -la ./build/VividAI-ipa.ipa
        
        echo "üì¶ IPA file size: $(du -sh ./build/VividAI-ipa.ipa)"
        
        # Verify IPA contents
        echo "üì¶ IPA contents:"
        unzip -l ./build/VividAI-ipa.ipa | head -20
        
        # Verify the app bundle is inside the IPA
        if ! unzip -l ./build/VividAI-ipa.ipa | grep -q "VividAI.app"; then
          echo "‚ùå VividAI.app not found in IPA contents"
          exit 1
        fi
        
        echo "‚úÖ IPA file is valid and contains VividAI.app"
        
    - name: Upload IPA artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: VividAI-ipa
        path: ./build/VividAI-ipa.ipa
        retention-days: 30
        
    - name: Success message
      if: github.ref == 'refs/heads/main'
      run: |
        echo "üéâ VividAI IPA file generated successfully!"
        echo "üì± File: VividAI-ipa.ipa"
        echo "üì¶ Size: $(du -sh ./build/VividAI-ipa.ipa)"
        echo "üîó Download from Actions artifacts"
        echo "üí° Upload to TestFlight, Appetize.io, or BrowserStack for testing"
