name: Generate IPA File (Archive Method)

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ main ]

jobs:
  generate-ipa:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Xcode
      run: sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer
      
    - name: Install dependencies
      run: |
        # Resolve Swift Package Manager dependencies
        echo "üì¶ Resolving dependencies..."
        xcodebuild -resolvePackageDependencies -project VividAI.xcodeproj
        
    - name: Clean environment
      run: |
        echo "üßπ Cleaning build environment..."
        rm -rf ~/Library/Developer/Xcode/DerivedData/*
        rm -rf ./DerivedData
        rm -rf ./build
        rm -rf ./archive
        
    - name: Archive for iOS Simulator
      run: |
        echo "üî® Archiving for iOS Simulator..."
        echo "üì± Target: iPhone 16, iOS 18.4"
        
        # Use archive command which creates a proper archive
        set -e  # Exit on any error
        
        xcodebuild archive \
          -project VividAI.xcodeproj \
          -scheme VividAI \
          -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4' \
          -configuration Release \
          -archivePath ./archive/VividAI.xcarchive \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          -resolvePackageDependencies \
          -verbose \
          -showBuildTimingSummary
        
        echo "‚úÖ Archive completed successfully!"
        
    - name: Find and verify archive
      run: |
        echo "üîç Looking for archive..."
        
        if [ ! -d "./archive/VividAI.xcarchive" ]; then
          echo "‚ùå Archive not found!"
          exit 1
        fi
        
        echo "‚úÖ Archive found at: ./archive/VividAI.xcarchive"
        echo "üì± Archive size: $(du -sh ./archive/VividAI.xcarchive)"
        
        # Verify archive contents
        echo "üì± Archive contents:"
        ls -la ./archive/VividAI.xcarchive/
        
        # Find the app bundle within the archive
        APP_PATH=$(find ./archive/VividAI.xcarchive -name "VividAI.app" -type d | head -1)
        
        if [ -z "$APP_PATH" ]; then
          echo "‚ùå App bundle not found in archive"
          echo "üìÅ Available files in archive:"
          find ./archive/VividAI.xcarchive -name "*.app" -type d || echo "No .app files found"
          exit 1
        fi
        
        echo "‚úÖ App bundle found in archive at: $APP_PATH"
        echo "üì± App bundle size: $(du -sh "$APP_PATH")"
        
    - name: Create IPA file from archive
      run: |
        echo "üì¶ Creating IPA file from archive..."
        mkdir -p ./build/Payload
        
        # Find the app bundle within the archive
        APP_PATH=$(find ./archive/VividAI.xcarchive -name "VividAI.app" -type d | head -1)
        
        if [ -z "$APP_PATH" ]; then
          echo "‚ùå App bundle not found in archive for IPA creation"
          exit 1
        fi
        
        echo "üì± Copying app bundle from archive: $APP_PATH"
        cp -r "$APP_PATH" ./build/Payload/
        
        # Create IPA file
        cd ./build
        echo "üì¶ Creating ZIP archive..."
        zip -r VividAI-simulator.ipa Payload/
        cd ..
        
        echo "‚úÖ IPA file created successfully!"
        
    - name: Verify IPA file
      run: |
        echo "üîç Verifying IPA file..."
        
        if [ ! -f "./build/VividAI-simulator.ipa" ]; then
          echo "‚ùå IPA file not found!"
          exit 1
        fi
        
        echo "‚úÖ IPA file found:"
        ls -la ./build/VividAI-simulator.ipa
        
        echo "üì¶ IPA file size: $(du -sh ./build/VividAI-simulator.ipa)"
        
        # Verify IPA contents
        echo "üì¶ IPA contents:"
        unzip -l ./build/VividAI-simulator.ipa | head -20
        
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: VividAI-ipa-archive
        path: ./build/VividAI-simulator.ipa
        retention-days: 30
        
    - name: Success message
      run: |
        echo "üéâ VividAI IPA file generated successfully using archive method!"
        echo "üì± File: VividAI-simulator.ipa"
        echo "üì¶ Size: $(du -sh ./build/VividAI-simulator.ipa)"
        echo "üîó Download from Actions artifacts"
        echo "üí° Upload to TestFlight, Appetize.io, or BrowserStack for testing"
