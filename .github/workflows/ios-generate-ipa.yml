name: Generate iOS App Bundle

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ main ]

jobs:
  generate-ipa:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Xcode
      run: sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer
      
    - name: Install dependencies
      run: |
        # Install CocoaPods if needed
        if [ -f "Podfile" ]; then
          gem install cocoapods
          pod install
        fi
        
        # Resolve Swift Package Manager dependencies
        xcodebuild -resolvePackageDependencies -project VividAI.xcodeproj
        
        # Clean derived data to ensure fresh build
        rm -rf ~/Library/Developer/Xcode/DerivedData/*
        
    - name: Build for iOS Simulator (No Code Signing Required)
      run: |
        xcodebuild clean build \
          -project VividAI.xcodeproj \
          -scheme VividAI \
          -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4' \
          -configuration Release \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          -derivedDataPath ./DerivedData \
          -resolvePackageDependencies
          
    - name: Create app bundle for simulator
      run: |
        mkdir -p ./build
        cp -r ./DerivedData/Build/Products/Release-iphonesimulator/VividAI.app ./build/
        echo "ðŸ“± VividAI.app created for iOS Simulator!"
          
    - name: List generated files
      run: |
        echo "ðŸ“± Generated files:"
        ls -la ./build/
        echo "ðŸ“¦ IPA file ready for testing!"
        
    - name: Upload app bundle artifact
      uses: actions/upload-artifact@v4
      with:
        name: VividAI-simulator-app
        path: ./build/VividAI.app
        retention-days: 30
        
    - name: Success message
      run: |
        echo "ðŸŽ‰ VividAI app bundle generated successfully!"
        echo "ðŸ“± You can download the .app file from the Actions artifacts"
        echo "ðŸ”— Go to Actions tab â†’ Select workflow run â†’ Download artifact"
        echo "ðŸ’¡ Use this .app file with iOS Simulator or Xcode for testing"
